Response {
  robot:
   Robot {
     adapterPath: 'D:\\zomco\\hubot-heyodo\\node_modules\\hubot\\src\\adapters',
     name: 'heyodo',
     events:
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined },
     brain:
      Brain {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        data: [Object],
        autoSave: true,
        saveInterval: [Object] },
     alias: false,
     adapter:
      BearyChatAdapter {
        domain: undefined,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        robot: [Circular],
        constructor: [Object],
        _setupClient: [Function],
        _setupEvents: [Function],
        send: [Function],
        reply: [Function],
        run: [Function],
        handleConnected: [Function],
        handleClosed: [Function],
        handleError: [Function],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        listenerCount: [Function: listenerCount],
        eventNames: [Function: eventNames],
        client: [Object] },
     Response: [Function: Response],
     commands:
      [ 'hubot repeat <quote> - <what the respond trigger does>',
        'hubot help - Displays all of the help commands that this bot knows about.',
        'hubot help <query> - Displays all help commands that match <query>.' ],
     listeners: [ [Object], [Object] ],
     middleware: { listener: [Object], response: [Object], receive: [Object] },
     logger: EventEmitter { level: 6, stream: [Object] },
     pingIntervalId: null,
     globalHttpOptions: {},
     version: '3.1.1',
     server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:8080',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 20 },
     router:
      { [EventEmitter: app]
        domain: undefined,
        _events: [Object],
        _maxListeners: undefined,
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        listenerCount: [Function: listenerCount],
        eventNames: [Function: eventNames],
        init: [Function: init],
        defaultConfiguration: [Function: defaultConfiguration],
        lazyrouter: [Function: lazyrouter],
        handle: [Function: handle],
        use: [Function: use],
        route: [Function: route],
        engine: [Function: engine],
        param: [Function: param],
        set: [Function: set],
        path: [Function: path],
        enabled: [Function: enabled],
        disabled: [Function: disabled],
        enable: [Function: enable],
        disable: [Function: disable],
        acl: [Function],
        bind: [Function],
        checkout: [Function],
        connect: [Function],
        copy: [Function],
        delete: [Function],
        get: [Function],
        head: [Function],
        link: [Function],
        lock: [Function],
        'm-search': [Function],
        merge: [Function],
        mkactivity: [Function],
        mkcalendar: [Function],
        mkcol: [Function],
        move: [Function],
        notify: [Function],
        options: [Function],
        patch: [Function],
        post: [Function],
        propfind: [Function],
        proppatch: [Function],
        purge: [Function],
        put: [Function],
        rebind: [Function],
        report: [Function],
        search: [Function],
        source: [Function],
        subscribe: [Function],
        trace: [Function],
        unbind: [Function],
        unlink: [Function],
        unlock: [Function],
        unsubscribe: [Function],
        all: [Function: all],
        del: [Function],
        render: [Function: render],
        listen: [Function: listen],
        request: [Object],
        response: [Object],
        cache: {},
        engines: {},
        settings: [Object],
        _eventsCount: 1,
        locals: [Object],
        mountpath: '/',
        _router: [Object] },
     adapterName: 'bearychat',
     errorHandlers: [],
     onUncaughtException: [Function] },
  message:
   TextMessage {
     user:
      User {
        id: '=bxc6f',
        message: [Object],
        room: [Object],
        name: '=bxc6f' },
     done: false,
     room: { vchannelId: '=bwSVj' },
     text: 'heyodo u make me cry',
     id: '1540527274387.0182' },
  match:
   [ 'heyodo u make me cry',
     index: 0,
     input: 'heyodo u make me cry' ],
  envelope:
   { room: { vchannelId: '=bwSVj' },
     user:
      User {
        id: '=bxc6f',
        message: [Object],
        room: [Object],
        name: '=bxc6f' },
     message:
      TextMessage {
        user: [Object],
        done: false,
        room: [Object],
        text: 'heyodo u make me cry',
        id: '1540527274387.0182' } } }


{ channel_id: '=bwSVj',
  created_ts: 1540608583117,
  disable_markdown: false,
  instance_no: 1,
  instance_seq: 19,
  key: '1540608583117.0119',
  refer_key: null,
  resource_key: '542571fa-053c-4af8-96ec-29014bfe8a46',
  subtype: 'normal',
  text: '@<==bxcAL=>  犯得上发射点发射点',
  ts: 1540608583117,
  type: 'channel_message',
  uid: '=bxc6f',
  vchannel_id: '=bwSVj' }


{ created_ts: 1540608866565,
  disable_markdown: false,
  instance_no: 1,
  instance_seq: 52,
  key: '1540608866565.0152',
  refer_key: null,
  resource_key: '31c32d53-032a-4bec-8bce-4c5b80d7a0fe',
  subtype: 'normal',
  text: '牛牛牛牛牛',
  to_uid: '=bxcAL',
  ts: 1540608866565,
  type: 'message',
  uid: '=bxc6f',
  unknown_before: false,
  vchannel_id: '=c4Xx45krV' }


  { created: '2018-10-27T04:14:31.000+0000',
  created_ts: 1540613670867,
  edited: false,
  id: '=gbdIk',
  is_channel: false,
  key: '1540613670867.0271',
  pin_id: null,
  reactions: [],
  refer_key: null,
  repost:
   { created_ts: 1540608532699,
     disable_markdown: false,
     id: '=bw7h8',
     message_key: '1540608532699.0116',
     robot_id: null,
     subtype: 'normal',
     team_id: '=bwE8p',
     text: '@<==bxcAL=> 发射点发射点发射点',
     uid: '=bxc6f',
     vchannel_id: '=bwTkK' },
  robot_id: null,
  subtype: 'forwarded',
  team_id: '=bwE8p',
  text: '转发了消息',
  text_i18n: { en: 'fowarded message', 'zh-CN': '转发了消息' },
  thread_key: null,
  ts: 1540613670879,
  type: 'message',
  uid: '=bxc6f',
  updated: '2018-10-27T04:14:31.000+0000',
  vchannel_id: '=c4Xx45krV' }


  [ { disable_markdown: false,
    refer_text: '电风扇电风扇发射点发射点',
    subtype: 'normal',
    text: 'zomco: 电风扇电风扇发射点发射点',
    type: 'refer',
    uid: '=bxc6f' } ]


{ channel_id: '=bwSVj',
  created_ts: 1540692937718,
  disable_markdown: false,
  instance_no: 1,
  instance_seq: 39,
  key: '1540692937718.0139',
  refer_key: null,
  resource_key: '637c969c-96f6-48ac-b290-2b3fd92a5fdb',
  subtype: 'normal',
  text: 'fsdfsdff!!!!',
  ts: 1540692937718,
  type: 'channel_message',
  uid: '=bxc6f',
  vchannel_id: '=bwSVj' }